// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Model;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231213003246_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Model.Partido", b =>
                {
                    b.Property<Guid>("PartidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("partido_id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time without time zone")
                        .HasColumnName("hora");

                    b.Property<int>("MaximoJugadores")
                        .HasColumnType("integer")
                        .HasColumnName("maximo_jugadores");

                    b.Property<string>("TipoCancha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tipo_cancha");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uuid")
                        .HasColumnName("usuario_id");

                    b.HasKey("PartidoId")
                        .HasName("partidos_pkey");

                    b.HasIndex("UsuarioId");

                    b.ToTable("partidos", (string)null);
                });

            modelBuilder.Entity("server.Model.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("usuario_id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contrasenia");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre_usuario");

                    b.HasKey("UsuarioId")
                        .HasName("usuario_pkey");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("server.Model.Partido", b =>
                {
                    b.HasOne("server.Model.Usuario", "Usuario")
                        .WithMany("Partidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("partidos_usuario_id_fkey");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("server.Model.Usuario", b =>
                {
                    b.Navigation("Partidos");
                });
#pragma warning restore 612, 618
        }
    }
}
